<phyphox xmlns="http://phyphox.org/xml" xmlns:editor="http://phyphox.org/editor/xml" version="1.8" editor:version="1.0" locale="de">
    <title>Helligkeit und Farben</title>
    <category>Laborino-Experimente</category>
    <description>Dieses Experiment misst in Echtzeit die Helligkeit und den Farbanteil der Grundfarben rot, grün und blau des einfallenden Lichtes mithilfe des internen Lichtsensors aus und trägt die Messdaten über der Zeit auf.</description>
    <icon format="base64"></icon>
    <data-containers>
        <!-- COMMUNICATION                                      -->
        <container size="1" init="0" >BT_INC</container>
        <container size="1" init="1" >BT_OUTC</container>

        <!-- DATA                                               -->
        <container size="0">TIME</container>
        <container size="0">RED</container>
        <container size="0">GREEN</container>
        <container size="0">BLUE</container>
        <container size="0">BRIGTH</container>

        <container size="0">RED_PERC</container>
        <container size="0">GREEN_PERC</container>
        <container size="0">BLUE_PERC</container>
        <container size="0">BRIGTH_PERC</container>

        <!-- CALCULATION BUFFER                                 -->
        <container size="0">RED_CAL</container>
        <container size="0">GREEN_CAL</container>
        <container size="0">BLUE_CAL</container>
        <container size="0">BRIGTH_CAL</container>

        <!-- LEN/INDEXES                                        -->
        <container size="1" init="1">LAST_IND</container>
    </data-containers>
    <input>
        <bluetooth id="Sense" mode="notification" >
            <output char="c0880001-30f7-4671-8b43-5e40ba53514a" conversion="uInt8" offset="0">BT_INC</output>

            <output char="da1a0001-30f7-4671-8b43-5e40ba53514a" conversion="float32LittleEndian" offset="0">TIME</output>
            <output char="da1a0001-30f7-4671-8b43-5e40ba53514a" conversion="int32LittleEndian" offset="4">RED</output>
            <output char="da1a0001-30f7-4671-8b43-5e40ba53514a" conversion="int32LittleEndian" offset="8">GREEN</output>
            <output char="da1a0001-30f7-4671-8b43-5e40ba53514a" conversion="int32LittleEndian" offset="12">BLUE</output>
            <output char="da1a0001-30f7-4671-8b43-5e40ba53514a" conversion="int32LittleEndian" offset="16">BRIGTH</output>
        </bluetooth>
    </input>
    <output>
        <bluetooth id="Sense" >
            <config char="c0f10001-30f7-4671-8b43-5e40ba53514a" offset="0" conversion="uInt32LittleEndian">14</config>
            <input char="c0880001-30f7-4671-8b43-5e40ba53514a" offset="0" conversion="uInt8">BT_OUTC</input>
        </bluetooth>
    </output>
    <analysis>
        <!-- ================================================== -->
        <!-- SETUPS                                             -->
        <!-- ================================================== -->
        <!-- WHILE THE MEASUREMENT HAS NOT STARTED YET RESET THE DATA BUFFERS SINCE THEY CAN ALSO RECIEVE DATA WITH AN OLD TIMESTAMP AT THE VERY BEGINNING AFTER STARTING THE EXPERIMENT.-->
        <if equal="true">
            <input as="a" keep="true">BT_INC</input>
            <input as="b" type="value">0</input>
            <input as="true" type="empty"></input>
            <output as="result">TIME</output>
        </if>
        <if equal="true">
            <input as="a" keep="true">BT_INC</input>
            <input as="b" type="value">0</input>
            <input as="true" type="empty"></input>
            <output as="result">RED</output>
        </if>
        <if equal="true">
            <input as="a" keep="true">BT_INC</input>
            <input as="b" type="value">0</input>
            <input as="true" type="empty"></input>
            <output as="result">GREEN</output>
        </if>
        <if equal="true">
            <input as="a" keep="true">BT_INC</input>
            <input as="b" type="value">0</input>
            <input as="true" type="empty"></input>
            <output as="result">BLUE</output>
        </if>
        <if equal="true">
            <input as="a" keep="true">BT_INC</input>
            <input as="b" type="value">0</input>
            <input as="true" type="empty"></input>
            <output as="result">BRIGTH</output>
        </if>

        <!-- ================================================== -->
        <!-- PREPARE DATA                                       -->
        <!-- ================================================== -->
        <!-- COPY NEW DATA INTO CALC BUFFERS                    -->
        <subrange>
            <input as="from" keep="true">LAST_IND</input>
            <input keep="true">RED</input>
            <input keep="true">GREEN</input>
            <input keep="true">BLUE</input>
            <input keep="true">BRIGTH</input>
            <output>RED_CAL</output>
            <output>GREEN_CAL</output>
            <output>BLUE_CAL</output>
            <output>BRIGTH_CAL</output>
        </subrange>

        <!-- SET CURRENT INDEX AS LAST INDEX                    -->
        <count>
            <input keep="true">TIME</input>
            <output>LAST_IND</output>
        </count>

        <divide>
            <input keep="true">RED_CAL</input>
            <input type="value">40.97</input>
            <output append="true">RED_PERC</output>
        </divide>
        <divide>
            <input keep="true">GREEN_CAL</input>
            <input type="value">40.97</input>
            <output append="true">GREEN_PERC</output>
        </divide>
        <divide>
            <input keep="true">BLUE_CAL</input>
            <input type="value">40.97</input>
            <output append="true">BLUE_PERC</output>
        </divide>
        <divide>
            <input keep="true">BRIGTH_CAL</input>
            <input type="value">40.97</input>
            <output append="true">BRIGTH_PERC</output>
        </divide>
    </analysis>
    <views>
        <view label="Info">
            <info label="Dieses Experiment liest den Farben- und Helligkeitssensor des Laborinos in Echtzeit aus. Der Sensor befindet sich direkt unter der kleinen Öffnung oben im Gehäuse. Wusstest du, dass das weiße Sonnenlicht aus vielen verschiedenen Farben wie rot, grün oder blau besteht? Aus welchen Farben setzt sich dann gelbes oder violettes Licht zusammen?"/>
            <info label=""/>
            <info label="Probiere es doch gleich mal aus!" bold="true"/>
            <info label=""/>
            <info label="Mit dem ► Knopf oben rechts kannst du die Messung starten. Nach dem Starten der Messung kannst du sie mit dem Ⅱ Knopf stoppen. Das Papierkorb Symbol löscht den aktuellen Datensatz. Mit dem ⁝ Symbol kannst du weitere Optionen aufrufen und zum Beispiel die Messung mit einer Verzögerung starten oder die aktuellen Messdaten exportieren."/>
            <info label=""/>
            <info label="Im Tab LIVE werden die aktuellen Messdaten in Echtzeit angezeigt. Mit dem Tab GRAPH kannst du dir alle  Messdaten über die Zeit auftragen lassen."/>
        </view>
        <view label="Live">
            <info label="Helligkeit:"  bold="true" unit="%"/>
            <info label="Der folgende Messwert gibt die relative Helligkeit 𝐻 des einfallenden Lichtes im visuellen Spektralbereich an."/>
            <info label=""/>
            <value label="𝐻    =" unit="%">
                <input>BRIGTH_PERC</input>
            </value>
            <info label=""/>
            <info label="Farbanteile:"  bold="true"/>
            <info label="Die folgenden 3 Messwert geben die relative Helligkeiten im roten (𝑅), grünen (𝐺), und blauen (𝐵) Bereich des Spektrums wieder. Damit lässt sich analysieren aus welchen Farbanteilen das einfallende Licht zusammengesetzt ist."/>
            <info label=""/>
            <value label="𝑅    ="  color="red" unit="%">
                <input>RED_PERC</input>
            </value>
            <value label="𝐺    ="  color="green" unit="%">
                <input>GREEN_PERC</input>
            </value>
            <value label="𝐵    ="  color="blue" unit="%">
                <input>BLUE_PERC</input>
            </value>
            <info label=""/>

        </view>
        <view label="Graph">
            <info label="Farb- und Helligkeitsverlauf:"  bold="true"/>
            <info label="Die folgenden 4 Graphen zeigen den zeitlichen Verlauf der relative Helligkeiten im gesamten sichtbaren Licht (𝐻), und im roten (𝑅), grünen (𝐺), und blauen (𝐵) Bereich des Spektrums."/>
            <info label=""/>
            <graph label="" aspectRatio="2.0" style="lines" lineWidth="1.5" color="ffffff" partialUpdate="true" labelX="Zeit 𝑡" labelY="Helligkeit" unitX="s" unitY="%" xPrecision="3" yPrecision="3">
                <input axis="x"  color="red">TIME</input>
                <input axis="y">RED_PERC</input>
                <input axis="x" color="green">TIME</input>
                <input axis="y">GREEN_PERC</input>
                <input axis="x"  color="blue">TIME</input>
                <input axis="y">BLUE_PERC</input>
                <input axis="x"  color="white">TIME</input>
                <input axis="y">BRIGTH_PERC</input>
            </graph>
        </view>
    </views>
    <export>
        <set name="Farben/Helligkeit">
            <data name="Zeit t in s">TIME</data>
            <data name="Helligkeit in %">BRIGTH_PERC</data>
            <data name="Rot-Helligkeit in %">RED_PERC</data>
            <data name="Grün-Helligkeit in %">GREEN_PERC</data>
            <data name="Blau-Helligkeit in %">BLUE_PERC</data>
        </set>
    </export>
</phyphox>
